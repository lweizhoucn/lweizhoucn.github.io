<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Commit message 和 Change log 编写指南</title>
    <url>/2020/08/16/Commit%20message%20%E5%92%8C%20Change%20log%20%E7%BC%96%E5%86%99%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;hello world&quot;</span><br></pre></td></tr></table></figure>
<p>上面代码的-m参数，就是用来指定 commit mesage 的。</p>
<a id="more"></a>

<p>如果一行不够，可以只执行git commit，就会跳出文本编辑器，让你写多行。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure>

<p>目前，社区有多种 Commit message 的写法规范。本文介绍<a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y">Angular 规范</a>，这是目前使用最广的写法，比较合理和系统化，并且有配套的工具。</p>
<h2 id="一、Commit-message-的作用"><a href="#一、Commit-message-的作用" class="headerlink" title="一、Commit message 的作用"></a>一、Commit message 的作用</h2><p>格式化的Commit message，有几个好处。</p>
<ol>
<li><p>提供更多的历史信息，方便快速浏览。<br>比如，下面的命令显示上次发布后的变动，每个commit占据一行。你只看行首，就知道某次 commit 的目的</p>
</li>
<li><p>可以过滤某些commit（比如文档改动），便于快速查找信息。</p>
</li>
</ol>
<p>比如，下面的命令仅仅显示本次发布新增加的功能。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log &lt;last release&gt; HEAD --grep feature</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>两数相加</title>
    <url>/2020/08/17/%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>hash</tag>
      </tags>
  </entry>
</search>
